<?php

namespace EI\AdminBundle\Repository;

//use EI\AdminBundle\Entity\Category;
//use EI\AdminBundle\Entity\WhereTo;

/**
 * BRRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BRRepository extends \Doctrine\ORM\EntityRepository
{
 
//    public function findByCategoryAndWhereTo(Category $category, WhereTo $whereTo){
//        $qb = $this->createQueryBuilder('br');
//        
//        $qb->leftJoin('br.categories','categories')
//                ->where('categories.id = :catId')
//                ->setParameter('catId',$category->getId());
//                
//        $qb->leftJoin('br.whereTos','whereTos')
//                ->where('whereTos.id = :whereTosId')
//                ->setParameter('whereTosId',$whereTo->getId())
//                
//                ;
//        
//        return $qb->getQuery()->getResult(); 
//        
//    }
    
 public function getBRWithCategoryAndWhereTo()
  {
    $qb = $this ->createQueryBuilder('br');
    
    $qb->leftJoin('br.categories', 'cat')
    ->addSelect('cat');
     
    $qb->leftJoin('br.whereTos', 'whe')
    ->addSelect('whe');

  return $qb
    ->getQuery()
    ->getResult()
  ;
  }
  
public function myFindAll()
{

 $queryBuilder = $this->createQueryBuilder('b');

 // On récupère la Query à partir du QueryBuilder
 $query = $queryBuilder->getQuery();

 // On récupère les résultats à partir de la Query
 $results = $query->getResult();

 // On retourne ces résultats
 return $results;
}

  
}
